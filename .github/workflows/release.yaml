# GitHub Actions İş Akışı: Python Paketini Test Et, Derle ve Yayınla
name: Build, Test, and Publish Python Package

# Bu iş akışının ne zaman tetikleneceğini belirler.
# main branch'ine yapılan her push'ta veya yeni bir sürüm etiketi (release tag) push'landığında çalışır.
on:
  push:
    branches: [ "main" ]
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+" # v1.2.3 gibi etiketlerle eşleşir
  pull_request:
    branches: [ "main" ]

jobs:
  # --- İŞ 1: Test ve Kod Kalitesi Kontrolü ---
  build_and_test:
    name: Test and Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"] # Farklı Python versiyonlarında test eder

    steps:
    - name: Kodu İndir
      uses: actions/checkout@v4

    - name: Python Kurulumu (${{ matrix.python-version }})
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Bağımlılıkları Yükle
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        # Paketi ve bağımlılıklarını düzenlenebilir modda kurar
        pip install -e .

    - name: Flake8 ile Kod Kalitesini Kontrol Et
      run: |
        # Python syntax hataları veya tanımsız isimler varsa derlemeyi durdur
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Diğer stil hatalarını uyarı olarak kabul et
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # Not: Bu adımın çalışması için projenizde testlerinizin olması gerekir.
    # - name: Test with pytest
    #   run: |
    #     pytest

  # --- İŞ 2: Paketi Derle ve PyPI'a Yükle ---
  publish:
    name: Publish to PyPI
    # Yalnızca 'build_and_test' işi başarılı olursa ve bir git tag'i push'landıysa çalışır
    needs: build_and_test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    permissions:
      id-token: write # PyPI ile güvenli bağlantı (Trusted Publishing) için gereklidir

    steps:
    - name: Kodu İndir
      uses: actions/checkout@v4

    - name: Python Kurulumu
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Derleme Bağımlılıklarını Yükle
      run: python -m pip install --upgrade build

    - name: Paketi Derle
      run: python -m build

    - name: Paketi PyPI'a Yükle
      uses: pypa/gh-action-pypi-publish@v1